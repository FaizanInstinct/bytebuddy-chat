// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String?  @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  conversations Conversation[]
  
  @@map("users")
}

model Conversation {
  id        String   @id @default(cuid())
  title     String?
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user     User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]
  
  @@map("conversations")
}

model Message {
  id             String   @id @default(cuid())
  content        String
  role           String   // 'user' or 'assistant'
  conversationId String
  createdAt      DateTime @default(now())
  imageUrl       String?  // URL to the uploaded image
  
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  
  @@map("messages")
}

model ChatSession {
  id        String   @id @default(cuid())
  sessionId String   @unique
  context   Json?    // Store conversation context
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("chat_sessions")
}
